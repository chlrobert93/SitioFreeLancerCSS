/*: seudo selectores*/
/*Almacenar variables custon propeti*/
:root {
 --blanco: #ffffff;
 --oscuro: #212121;
 --primario: #ffc107;
 --secundario: #0097A7;
 --gris: #757575;
 --grisClaro: #c8c6c6;

 --fuente-principal: 3.8rem;
}


/*Globales*/
html{
    font-size: 62.5%;
    box-sizing: border-box;
}

*,*:before, *:after {
    box-sizing: inherit;
}



body {
   font-size: 16px;/* 1 rem = 10px*/
   font-family: 'Fira Sans Condensed', sans-serif;
   background-image: linear-gradient(to top, var(--grisClaro) 0%, var(--blanco) 100%);
}


h1 {
    font-size: 3.8rem;
}


h2{
    font-size: 2.8rem;

}

h3 {
   font-size: 1.8rem;
}

h1,h2,h3{
    text-align: center;
}


/*Titulo*/
.titulo span {
    font-size: 2rem;
}

/*
.w-sm-100{
  width: 100%;
}

@media (min-width: 768px){
    .w-sm-100{
        width: auto;
    }
}


.flex{
    display: flex;
}

.alinear-derecha{
    justify-content: flex-end;
}
*/
/*h1.titulo span {
    font-size: 2rem;
    color:blue;
}+/

/*Especificidad*/
/*.titulo span {
    font-size: 2rem;
    color: red;
}*/

/*
¿Qué es Especificidad?
--Es como el navegador va a
mostrar el CSS de acuerdo a
que tan específico es el 
Selector que hemos creado

CSS es en cascada, eso no significa que si  un
selector aparece después será tomado en cuenta
sino más bien su especificidad
*/
/*Global*/
.contenedor {
    /*Si tienes el ancho disponible tomalo sino no*/
    max-width: 120rem;
    /*margin-top: 0;*/
    /*Margen a la derecha*/
    /* margin-right: auto;
    margin-bottom: 0;+/
    /*Margen izquierda*/
    /*margin-left: auto;*/
   /* margin: 0 auto 0 auto;*/
    /*El primero es el de arriva y aabajo*/
    /*El segundo es el de la izquierda y derecha*/
    margin:0 auto;
/*
Los margenes van a decirnos
en que posición se va colocar un elemento
*/
}


/*
Display block o Display Inline

Algunos elementos se muestran de una forma y otros de otra
Todos los elementos en HTML ya tienen un display por default

Display: block;
Significa que el elemento se colocará uno debajo del otro sin importar su tamaño

Display inline
Significa que el elmento se posicionará a la derecha una vez que haya tomado el 
espacio que requiere

Ningun elemento tiene un 
displa: flex; o display: grid; por
default

No es necesario especificar un display para cada elemento, salvo
que deses modificar el viene por default

*/


.boton {
    background-color: var(--secundario);
    color: var(--blanco);
    padding: 1rem 3rem;
    margin-top: 2rem;
    font-size: 2rem;
    text-decoration: none;
    text-transform: uppercase;
    font-weight: bold;
    border-radius: .5rem;
    width: 90%;
    /*Centrar texto*/
    text-align: center;
    border: none;
}


@media(min-width: 768px){
    .boton{
        width: auto;
    }
}


.boton:hover{
    cursor: pointer;
}

.sombra{
    -webkit-box-shadow: 0px 5px 15px 0px rgba(112,112,112,0.54);
    -moz-box-shadow: 0px 5px 15px 0px rgba(112,112,112,0.54);
    box-shadow: 0px 5px 15px 0px rgba(112,112,112,0.54);
    background-color: var(--blanco);
    padding: 2rem;
    border-radius: 1rem;
}

/*Navegación Principal*/
.nav-bg {
    background-color: var(--secundario);
 
}



.navegacion-principal {
/*Hacer el lemento más alto*/
  display: flex;
  /*display: row;*/
  flex-direction: column;
  /*Justify content es la forma de centrar horizontalmente*/
  /*justify-content: space-between;*/
  /*align-items para centrar verticalmente*/
  align-items: center;
  /*align-items: center;*/
  /*justify-content: space-between;*/
  /*justify-content: flex-start;*/
  /*justify-content: center;*/
  /*justify-content: flex-end;*/
  /*justify-content: space-around;*/
  /*justify-content: space-evenly;*/
  /*
  flexbox fue diseñado 
  como modelo unidimensional para crear
  layouts
  En  flexbox solo puedes colocar y distribuir tus elementos
  en una dirección fila(row)  o columna(column)

  row es aplicado por default al definir un display: flex

  Los otros valores son row-reverse, column y column-reverse

 si elegimos row o row-reverse los elementos hijos se colocaran de izquierda a derecha uno
 junto al otro
 es una tecnologia para layouts y sustituye a los floats o table-cell
 ------------------
 xxx              -
------------------
  */

}

@media (min-width: 768px) {
    .navegacion-principal  {
        justify-content: space-between;
        flex-direction: row;
    }  
}


.navegacion-principal a {
    color: var(--blanco);
    text-decoration: none;
    font-size: 2rem;
    font-weight: bold;
    /*display: block;*/
    padding: 1rem;
}

.navegacion-principal a:hover {
    background-color: var(--primario);
    color: var(--oscuro);
}


/*Hero*/
.hero {
    background-image:  url(../img/hero.jpg);
    background-repeat: no-repeat;
    background-size: cover;
    height: 450px;
    /*padding: 20px;*/
    /*Posion relativa para poner opaca la img*/
    position: relative;
    margin-bottom: 2rem;
}

 
.contenido-hero{
    position: absolute;
    background-color: rgba(0,0,0, .5);/*Anterior*/
    background-color:  rgb(0 0 0 / 70%);
    width: 100%;
    height: 100%;
    /*top:0;
    bottom: 0;
    right: 0;
    left: 0;*/


    /*Alinear vertical como horizontalmente
     Centrar en medio
    */
    display: flex;
    /*Columnas de arriba a abajo*/
    flex-direction: column;
    /*alinear horizontal para column*/
    align-items: center;
    /*Alinear verticalmente para colum*/
    justify-content: center;
}

.contenido-hero h2,
.contenido-hero p {
    color: var(--blanco);
}


.contenido-hero  .ubicacion {

     display: flex;
     /*Alinasión vertical por que no tiene column*/
     align-items: flex-end;
}



@media (min-width: 780px) {
    .servicios {
        display: grid;
        /*grid-template-columns: 33.3% 33.3% 33.3%;*/
        /*grid-template-columns: 1fr 1fr 1fr;*/
        /*Numero de columnas de igual tamaño*/
        grid-template-columns: repeat(3,1fr);
        /*Espacio a los lados*/
        column-gap: 1rem;
       /* grid-template-columns: 300px 300px;
        Tamaño de las columnas de alto
        grid-template-rows: 200px 800px;
        grid:200px 800px /300px 300px;*/
    }
    
}



.servicio {
    display: flex;
    flex-direction: column;
    align-items: center;

}


.servicio h3 {
    color: var(--secundario);
    font-weight: normal;

}


.servicio p {
    /*Interlineado de letras*/
    line-height: 2;
}

.servicio .iconos {
  height: 15rem;
  width: 15rem;
  background-color: var(--primario);
  border-radius:  50%;
  display: flex;
  justify-content: space-evenly;
  /*Aling aitems permite alinear verticalmente*/
  align-items: center;
}



/*contacto*/
.formulario {

    background-color: var(--gris);
     /*width: min( 60rem, 100%); *//*Utilizar el valor más pequeño*/
    /*Centrar hosizontalmente*/
    /*Cunado hay padre displey flex*/
   /* margin:0 auto;
    padding: 2rem;
    border-radius: 1rem;*/
    

}


.formulario fieldset {
    border: none;

}

.formulario legend {

    display: none;
  

}


@media (min-width:780px){
    .formulario legend {
        text-align: center;
        font-size: 1.8rem;
        text-transform: uppercase;
        font-weight: 700;
        margin-bottom: 2rem;
        color:var(--primario);
        display: inline;

    }

}






@media (min-width:780px){
    .cont-form{

        display:grid;
        grid-template-columns: repeat(3,1fr);
        column-gap: 1rem;  
    
    }
}


.cont-campo {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

}

.campo {
    margin-bottom: 1rem;
}

.campo label {
    color:var(--blanco);
    font-weight: bold;
    margin-bottom: .5rem;
    display: block;
}

/*.campo input[type="text" ],
.campo input[type="tel"]
{
 background-color: #0097A7;
}*/

.input-text {
    width: 100%;
    border: none;
    padding: .5rem;
    border-radius: .5rem;
}


/*.enviar .boton{
    width: 100%;
}*/





/*
Diferentes estilos para ecribir CSS
¿BEM, Utility First o Módulos?

.card{}
.car__titulo{}
.car__imagen {}
.car__boton {}
.car__boton--activo{}

Utility First
.text-center{}
.color-red-100{}
.bg-blue-200{}
.p-2{}
.m-2{}

Módulos
.card {}
.card  h2 {}
.card img {}
.card a {}
*/


/*
Responsive Web con Media Queries

@media (min-width:768px){

}

@media(min-width:992px){

}


*/

/*LLegando a 480px vamos a usar el código css*/
/*body{

    background-color: #ffc107;
    font-size: 3rem;
}

@media (min-width:480px){
    body{
        background-color: blue;
    }
}

@media (min-width: 768px){
    body{
        background-color: #0097A7;
    }
}*/

/*ctr+ shif + p y selecionar user snippets usuario

	"Crea un Media Querie": {
		"prefix": "mq",
		"body": "@media (min-width: $1) {\n $2  \n}"
	}
*/

/*Media querys estandars*/
/*
@media (min-width: 480px) {
   
}

@media(min-width:768px){

}

@media(min-width:1140px){

}
@media (min-width: 1400px) {
   
}*/

/*https://responsively.app/*/


/*
Utilizar Flexbox
--Para la alineación o distribución de los
elementos que estarán dentro de contenedores

Utilizar CSS Grid
Para definir el Layout de tu sitio web, como
pueden se las columnas ocontenedores de 
elementos
*/
